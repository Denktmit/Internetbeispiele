<UserControl x:Class="WPFUtils.TreeOnDemand.TreeOnDemand"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPFUtils.TreeOnDemand"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800">
  <UserControl.Resources>
    <!--Style TargetType="{x:Type ToggleButton}">
      <Style.Resources>
        <Color x:Key="Color.Additional.LightGrey">#989EA8</Color>
        <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
        <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
        <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>
        <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                         Color="{StaticResource Color.Additional.LightGrey}" />
        <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                         Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
        <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                         Color="{StaticResource Color.Additional.MediumGrey}" />
        <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                         Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
      </Style.Resources>
    </-->
  </UserControl.Resources>
  <Grid>
    <DockPanel>
      <TextBlock DockPanel.Dock="Bottom" TextWrapping="Wrap" FontSize="12" Background="LightSlateGray">
      Hier könnte man auch ein Suchfeld einbauen. (TreeOnDemand)
      </TextBlock>
      <StackPanel DockPanel.Dock="Bottom">
        <TextBlock Margin="10">Selected Name:</TextBlock>
        <TextBlock Margin="10,0,0,0"
                   Foreground="Blue"
                   Text="{Binding ElementName=MyTOD, 
                          Path=SelectedValue.Name}"/>

        <TextBlock Margin="10">Selected Description:</TextBlock>
        <TextBlock Margin="10,0,0,0" 
                   Foreground="Blue"
                   Text="{Binding ElementName=MyTOD, 
                          Path=SelectedValue.Description}"/>
      </StackPanel>

      <TreeView Name="MyTOD"
                ItemsSource="{Binding RootElements}"
                SelectedValuePath="Object">
        <TreeView.ItemContainerStyle>
          <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Margin" Value="-5, 0, 0, 0"/>
            <!--Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition MinWidth="19" Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded}"/>
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                      <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" Margin="-12,0,0,0"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="false">
                      <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                      <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                    </>
                    <Trigger Property="IsSelected" Value="true">
                      <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    </Trigger>
                    <MultiTrigger>
                      <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                      </MultiTrigger.Conditions>
                      <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="false">
                      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </-->
            <Style.Triggers>
              <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
              </Trigger>
              <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                  <Setter.Value>
                    <ItemsPanelTemplate>
                      <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                  </Setter.Value>
                </Setter>
              </Trigger>
            </Style.Triggers>
          </Style>
        </TreeView.ItemContainerStyle>
          
        <TreeView.ItemTemplate>
          <HierarchicalDataTemplate DataType="{x:Type TreeViewItem}"
                                    ItemsSource="{Binding Children}">
            <WrapPanel>
              <TextBlock Text="{Binding Name}" />
            </WrapPanel>
          </HierarchicalDataTemplate>
        </TreeView.ItemTemplate>
          
      </TreeView>

    </DockPanel>
  </Grid>
</UserControl>
